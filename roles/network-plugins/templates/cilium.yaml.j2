---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlaQXZjMVdINUJRbmk5eDdCZHBDRjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURjeU9EQTVNVGd6TUZvWERUSTFNRGN5TnpBNQpNVGd6TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1ZktFR3VDalpUSTJucVJxak5KUGJEbzZ5c2p6Tm5UbGtKQ3FYbGN1Lzg1ejB0RVoKTVZmVjlXVm9nZE5iRll6bGxicGVmKzJCNW1LVXpISkJwKzZpVFAvS3l5aE8xcHVkVjRGblM0QUhibDlPbk5raQo2cG92VURSNExobFBQMTZLUk1Celk4Z3I3VlMyRHF2MWlXcEtMMWowSjRMRGNuQzJpQmY2d0ROeVJRQjhrQ3pnCm0rNlNMUnhWdFFBRDJvdm9CS0JZenh1cXBvUlY0S3JNSHZxWUxyOVZDYnQ2NXV4Q1hLdytZa2VQS1lSRUt1aWsKM3NNOWkyTlFEMXg2ekgyVzJSNndObWdtUFJGaWIrZVV6cUJxTE1BR0N2dnhnY0ZxUG5GT3Q1MjNPRWQ2NXgxNApPbEZ3a09ML3hLdTVybmIxV0VWakU2Nlk4T2R2SFFscU1Ha2dId0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRE9vSkRQV1ZsSVpiRUN5NnhXZHdhQ0xJT0J2TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVRqeFBVaTYzMlJrc0lHKzBSb3d2bWFjb3RSOEFaNkE1QStZOCs4bjZ2QjNWQjduTFoyY2lUCllVTmZOT3I0SHVzVkd5MnVqa0lGckpEaWVXT0VlbExGMjBLRzdZNzM2eGRmRnJjQldRT3pNTlFtbTZYZHlEK0YKM2pWZzNuWk9MaVJEbXBiYTlqczRmUk5FeWxQR1pHa2Y4cm9lMHNGUjQ4Y05Id1pBYjlIOU1UL3dJVm5obTRtUgo2d0Y1UDRFRXdXUk9HOHZsRzhqdlE5QVlWNGEwbHV1dmRTVDdQdUtXZ1hqV0liQnJ6blNrUXljVFQxYVFhOGNuCjB6M21zMk9xclZkSTYyS29iRERUQUVtc1FCL0lFTWhHNnFMOXBsbnRGWHRTdW44UHJ3TEI2MDBlWEIyczIxdW8KWWRCQm9MeWZDMmxoeFE3QzV0M0FiWXlUNGxDdHdnOGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWZLRUd1Q2paVEkybnFScWpOSlBiRG82eXNqek5uVGxrSkNxWGxjdS84NXowdEVaCk1WZlY5V1ZvZ2ROYkZZemxsYnBlZisyQjVtS1V6SEpCcCs2aVRQL0t5eWhPMXB1ZFY0Rm5TNEFIYmw5T25Oa2kKNnBvdlVEUjRMaGxQUDE2S1JNQnpZOGdyN1ZTMkRxdjFpV3BLTDFqMEo0TERjbkMyaUJmNndETnlSUUI4a0N6ZwptKzZTTFJ4VnRRQUQyb3ZvQktCWXp4dXFwb1JWNEtyTUh2cVlMcjlWQ2J0NjV1eENYS3crWWtlUEtZUkVLdWlrCjNzTTlpMk5RRDF4NnpIMlcyUjZ3Tm1nbVBSRmliK2VVenFCcUxNQUdDdnZ4Z2NGcVBuRk90NTIzT0VkNjV4MTQKT2xGd2tPTC94S3U1cm5iMVdFVmpFNjZZOE9kdkhRbHFNR2tnSHdJREFRQUJBb0lCQUVIMG9hTWU5eFlYLzRPNQo4Z2xOTjlxOXRNamxDay9RbXZUeU8xd0hOS2FMeGsySzJaTEZBeUZ0L09tLzNGa0NoeFRhN0ZZWUdyRnJXamhDCmRzTm9RNjFvTmJobDdjRDFwWk82VkxkVkRFMjhCSmhoOUo2ZVhoWG01cElEYkRhZ0JBOXE3QU1DcDRJaFFBcG8KT0VtcnAvQ3ZicnJ0Q1FKNHRHWUZpMjNOVWNUalVtRlF6TDNtenVuVDM2b3FheFlEQk1mRTYyNVpUWEtpb0lZWQpjWFJqR296dnBlVXppR0I2TFJFbkdCcVpsbWxuWGt2TGpCbHZ1M1F0T3puSFFWN3Vld2NZMGR3aXJUTGNnbHVaCjlXekVyQU1GVVJFR3dIMWlFWjl4OHpXSFJEcGorUXM4K2RuSDc5aDdpekRtc09LaFdINlhkSTgrenNtcUx4WUUKdmtUMjJlRUNnWUVBNDRMQVkyOHI1d001QUdzekd2ZGhTV05ZSTJWd1F4VFBMUHVGc2hGOWl5LzlIS0pRSzJ3YQpHM0c4UEhlZTZaODV2YjJoQ2htbG5CSVpQY2dtdlU1Z1VGUGJRYUN0OHZKcHFtbEQvdG9hNjFabHJlMzJ5aFhvCjY1ZFFaK2RoZkthbG54OHlLQXVEVWJSSUlqZzJNSnRENkI4WDc3bm9oSW5RMGMyWGlmKytVN2NDZ1lFQTBUdGcKcVNiUmpIbXk4djBzYTIweXBuQzROMUNrQjBEVWQ0b2FqbjNFYkthTGtRQ2NoUVh0TkVBYmlhUE9pb0VXUXl1Nwo4WDZvbjJIa0ZDN3BKVVlWYWJNWmg0SEozaC81TFU4MWVGSzQrMlRNUWcvd2FWZHNEWm8wVWhxNE5qdlJ5ckt2CnhGQmFIaEJ2NjNFVlBrTTJSdWlGZnJyajVzNGNxY1pBU3l1Ukp0a0NnWUVBcHRwOXZtOEtBNktaYTNVelJkT24KeGVyVitSK3I5WWFOYXJBTW5VdTJoeDNxdzlWR2RwSVJrNDhXUGtKOGlWbjlQdXFUOEpSZW9OZWxLMnBlL3ZjOApLNjFVWUEwM2hiWERTUGRxcHIzT2dFb2N5REo5akRnRldzTGVkVlY4YWE3T1NLVFlaQVlOaVI1dXlLbnhGRFRLCjJMSDFIQnQ4SzdmbkxmZFo3QnRqdW9FQ2dZQnRSYmgydnZwRGhpK0tMZVRyK2V5dzlqK1BUQU5PY25KRU9CRWsKaDlSMDlnbi80YlRjMkRxSXhrNWJkUHhpWTRadjhFQklvR0NLVk1LY005KzVncitlSTFaYTZkSzJ1allWanIrYgpKb0RMY2xvbXlsSkJnZEhCek40MFh4WUQ1UHZ0QTZNK1FNUy8zTS9HdzVsWG1oeVhyY3BDWkhLdjBNY3hkNE9PCmZxTmhDUUtCZ0dneVlaOWRqNkx1dFk1d1h4YkFIdjduemYzaU15K1NqV3VrTW5yRDNRTGVyeXhvZUVwTHNuTVEKdUV6T0pHZ2QyZjNNb2F3clNFRDNtYzNES0ZpK1hBV2NXMWJ4ZG9CQ3VPQ2JsUnljTnE4QlQ4QjZVVDBmYldpYQpydXUvb2RvVEJFNTFyQnpmUFNTUkN6L3BPZ3AvNjVYVkwwS1ZNNXpweHdJM2VaU3VWV2hQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlaQXZjMVdINUJRbmk5eDdCZHBDRjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURjeU9EQTVNVGd6TUZvWERUSTFNRGN5TnpBNQpNVGd6TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1ZktFR3VDalpUSTJucVJxak5KUGJEbzZ5c2p6Tm5UbGtKQ3FYbGN1Lzg1ejB0RVoKTVZmVjlXVm9nZE5iRll6bGxicGVmKzJCNW1LVXpISkJwKzZpVFAvS3l5aE8xcHVkVjRGblM0QUhibDlPbk5raQo2cG92VURSNExobFBQMTZLUk1Celk4Z3I3VlMyRHF2MWlXcEtMMWowSjRMRGNuQzJpQmY2d0ROeVJRQjhrQ3pnCm0rNlNMUnhWdFFBRDJvdm9CS0JZenh1cXBvUlY0S3JNSHZxWUxyOVZDYnQ2NXV4Q1hLdytZa2VQS1lSRUt1aWsKM3NNOWkyTlFEMXg2ekgyVzJSNndObWdtUFJGaWIrZVV6cUJxTE1BR0N2dnhnY0ZxUG5GT3Q1MjNPRWQ2NXgxNApPbEZ3a09ML3hLdTVybmIxV0VWakU2Nlk4T2R2SFFscU1Ha2dId0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRE9vSkRQV1ZsSVpiRUN5NnhXZHdhQ0xJT0J2TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVRqeFBVaTYzMlJrc0lHKzBSb3d2bWFjb3RSOEFaNkE1QStZOCs4bjZ2QjNWQjduTFoyY2lUCllVTmZOT3I0SHVzVkd5MnVqa0lGckpEaWVXT0VlbExGMjBLRzdZNzM2eGRmRnJjQldRT3pNTlFtbTZYZHlEK0YKM2pWZzNuWk9MaVJEbXBiYTlqczRmUk5FeWxQR1pHa2Y4cm9lMHNGUjQ4Y05Id1pBYjlIOU1UL3dJVm5obTRtUgo2d0Y1UDRFRXdXUk9HOHZsRzhqdlE5QVlWNGEwbHV1dmRTVDdQdUtXZ1hqV0liQnJ6blNrUXljVFQxYVFhOGNuCjB6M21zMk9xclZkSTYyS29iRERUQUVtc1FCL0lFTWhHNnFMOXBsbnRGWHRTdW44UHJ3TEI2MDBlWEIyczIxdW8KWWRCQm9MeWZDMmxoeFE3QzV0M0FiWXlUNGxDdHdnOGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdWZLRUd1Q2paVEkybnFScWpOSlBiRG82eXNqek5uVGxrSkNxWGxjdS84NXowdEVaCk1WZlY5V1ZvZ2ROYkZZemxsYnBlZisyQjVtS1V6SEpCcCs2aVRQL0t5eWhPMXB1ZFY0Rm5TNEFIYmw5T25Oa2kKNnBvdlVEUjRMaGxQUDE2S1JNQnpZOGdyN1ZTMkRxdjFpV3BLTDFqMEo0TERjbkMyaUJmNndETnlSUUI4a0N6ZwptKzZTTFJ4VnRRQUQyb3ZvQktCWXp4dXFwb1JWNEtyTUh2cVlMcjlWQ2J0NjV1eENYS3crWWtlUEtZUkVLdWlrCjNzTTlpMk5RRDF4NnpIMlcyUjZ3Tm1nbVBSRmliK2VVenFCcUxNQUdDdnZ4Z2NGcVBuRk90NTIzT0VkNjV4MTQKT2xGd2tPTC94S3U1cm5iMVdFVmpFNjZZOE9kdkhRbHFNR2tnSHdJREFRQUJBb0lCQUVIMG9hTWU5eFlYLzRPNQo4Z2xOTjlxOXRNamxDay9RbXZUeU8xd0hOS2FMeGsySzJaTEZBeUZ0L09tLzNGa0NoeFRhN0ZZWUdyRnJXamhDCmRzTm9RNjFvTmJobDdjRDFwWk82VkxkVkRFMjhCSmhoOUo2ZVhoWG01cElEYkRhZ0JBOXE3QU1DcDRJaFFBcG8KT0VtcnAvQ3ZicnJ0Q1FKNHRHWUZpMjNOVWNUalVtRlF6TDNtenVuVDM2b3FheFlEQk1mRTYyNVpUWEtpb0lZWQpjWFJqR296dnBlVXppR0I2TFJFbkdCcVpsbWxuWGt2TGpCbHZ1M1F0T3puSFFWN3Vld2NZMGR3aXJUTGNnbHVaCjlXekVyQU1GVVJFR3dIMWlFWjl4OHpXSFJEcGorUXM4K2RuSDc5aDdpekRtc09LaFdINlhkSTgrenNtcUx4WUUKdmtUMjJlRUNnWUVBNDRMQVkyOHI1d001QUdzekd2ZGhTV05ZSTJWd1F4VFBMUHVGc2hGOWl5LzlIS0pRSzJ3YQpHM0c4UEhlZTZaODV2YjJoQ2htbG5CSVpQY2dtdlU1Z1VGUGJRYUN0OHZKcHFtbEQvdG9hNjFabHJlMzJ5aFhvCjY1ZFFaK2RoZkthbG54OHlLQXVEVWJSSUlqZzJNSnRENkI4WDc3bm9oSW5RMGMyWGlmKytVN2NDZ1lFQTBUdGcKcVNiUmpIbXk4djBzYTIweXBuQzROMUNrQjBEVWQ0b2FqbjNFYkthTGtRQ2NoUVh0TkVBYmlhUE9pb0VXUXl1Nwo4WDZvbjJIa0ZDN3BKVVlWYWJNWmg0SEozaC81TFU4MWVGSzQrMlRNUWcvd2FWZHNEWm8wVWhxNE5qdlJ5ckt2CnhGQmFIaEJ2NjNFVlBrTTJSdWlGZnJyajVzNGNxY1pBU3l1Ukp0a0NnWUVBcHRwOXZtOEtBNktaYTNVelJkT24KeGVyVitSK3I5WWFOYXJBTW5VdTJoeDNxdzlWR2RwSVJrNDhXUGtKOGlWbjlQdXFUOEpSZW9OZWxLMnBlL3ZjOApLNjFVWUEwM2hiWERTUGRxcHIzT2dFb2N5REo5akRnRldzTGVkVlY4YWE3T1NLVFlaQVlOaVI1dXlLbnhGRFRLCjJMSDFIQnQ4SzdmbkxmZFo3QnRqdW9FQ2dZQnRSYmgydnZwRGhpK0tMZVRyK2V5dzlqK1BUQU5PY25KRU9CRWsKaDlSMDlnbi80YlRjMkRxSXhrNWJkUHhpWTRadjhFQklvR0NLVk1LY005KzVncitlSTFaYTZkSzJ1allWanIrYgpKb0RMY2xvbXlsSkJnZEhCek40MFh4WUQ1UHZ0QTZNK1FNUy8zTS9HdzVsWG1oeVhyY3BDWkhLdjBNY3hkNE9PCmZxTmhDUUtCZ0dneVlaOWRqNkx1dFk1d1h4YkFIdjduemYzaU15K1NqV3VrTW5yRDNRTGVyeXhvZUVwTHNuTVEKdUV6T0pHZ2QyZjNNb2F3clNFRDNtYzNES0ZpK1hBV2NXMWJ4ZG9CQ3VPQ2JsUnljTnE4QlQ4QjZVVDBmYldpYQpydXUvb2RvVEJFNTFyQnpmUFNTUkN6L3BPZ3AvNjVYVkwwS1ZNNXpweHdJM2VaU3VWV2hQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlaQXZjMVdINUJRbmk5eDdCZHBDRjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURjeU9EQTVNVGd6TUZvWERUSTFNRGN5TnpBNQpNVGd6TUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1ZktFR3VDalpUSTJucVJxak5KUGJEbzZ5c2p6Tm5UbGtKQ3FYbGN1Lzg1ejB0RVoKTVZmVjlXVm9nZE5iRll6bGxicGVmKzJCNW1LVXpISkJwKzZpVFAvS3l5aE8xcHVkVjRGblM0QUhibDlPbk5raQo2cG92VURSNExobFBQMTZLUk1Celk4Z3I3VlMyRHF2MWlXcEtMMWowSjRMRGNuQzJpQmY2d0ROeVJRQjhrQ3pnCm0rNlNMUnhWdFFBRDJvdm9CS0JZenh1cXBvUlY0S3JNSHZxWUxyOVZDYnQ2NXV4Q1hLdytZa2VQS1lSRUt1aWsKM3NNOWkyTlFEMXg2ekgyVzJSNndObWdtUFJGaWIrZVV6cUJxTE1BR0N2dnhnY0ZxUG5GT3Q1MjNPRWQ2NXgxNApPbEZ3a09ML3hLdTVybmIxV0VWakU2Nlk4T2R2SFFscU1Ha2dId0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRE9vSkRQV1ZsSVpiRUN5NnhXZHdhQ0xJT0J2TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQVRqeFBVaTYzMlJrc0lHKzBSb3d2bWFjb3RSOEFaNkE1QStZOCs4bjZ2QjNWQjduTFoyY2lUCllVTmZOT3I0SHVzVkd5MnVqa0lGckpEaWVXT0VlbExGMjBLRzdZNzM2eGRmRnJjQldRT3pNTlFtbTZYZHlEK0YKM2pWZzNuWk9MaVJEbXBiYTlqczRmUk5FeWxQR1pHa2Y4cm9lMHNGUjQ4Y05Id1pBYjlIOU1UL3dJVm5obTRtUgo2d0Y1UDRFRXdXUk9HOHZsRzhqdlE5QVlWNGEwbHV1dmRTVDdQdUtXZ1hqV0liQnJ6blNrUXljVFQxYVFhOGNuCjB6M21zMk9xclZkSTYyS29iRERUQUVtc1FCL0lFTWhHNnFMOXBsbnRGWHRTdW44UHJ3TEI2MDBlWEIyczIxdW8KWWRCQm9MeWZDMmxoeFE3QzV0M0FiWXlUNGxDdHdnOGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRT2p4d0hURGhIRzdjdHNRdTQ0VWRPVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3TnpJNE1Ea3hPRE14V2hjTk1qVXdOekkzTURreApPRE14V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMXRvdUFUbjZIRFl5bkhpTHRQUDYKK2x0RDRKTjVyek9ab1E2SG02UEU0L2N1eWN0Z3FvQll1NHR4RnhldzdSaFZVajdSOUZMUjBUa3lXQmZJbkdaRApPcGdyZ1Y0MzZYVVp4UTBwTmxWUVFzQ2J5QkJ1NVRMYVBhZTVlNDBFeklGQWExZ1ZlT0dzL0hlcUl4bWp4bC96CmZXaDVPbkJPZEF4K2NWdjk2Ym5jWmJwUzdaUFJpaW5pTlBYeVFPUTA3dm9jalhXMEZtc2MyY1BQTnphcmVleTEKS1ZXdW1QT0kralFoSmt6YlFtb0VnUXhPMmc3dFlySGxHZ2tmRHBQcFBsSE9lbnhBOUNUQzcwTmgyYzlQcHBQbwpFVGZBZEJGczhjSHFJbFpkKytZdFBMK1Q0K04xeFhvVHNFQXFPUVAwOEdYSnlGS01HV2ZsUFU1cXdYM2t4ck9YClF3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRenFDUXoxbFpTR1d4QQpzdXNWbmNHZ2l5RGdiekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDak13cXM4dk1qQS9ubGFQWEdrY0ZySCthZlNxdlUKVXB6OFFIWU9wbjJ4L2hiUkljSTRlbUlGVWU0MkxwMGpUVGlxUFpuRVNLYWNrbEVhVVA5NGVxSk9EdVAvTUh1YQpDN1hGV0Rnc2NBOVh4czN5QVJkZHB3MzRYUzJ5YUNRUWVjVVpaOVBQeWo4bmh4Wm1mblRJeEw5aHdTTTFRZnVvCmtKUm5VZWFWZUd4dkNqWDl1d0NvZGNIMzdXb0pvK2RmaFZNbEJheUM1eW5OakVDbm04UElNbmJ6UUl5clk4WE0KMG9YckJjdXJDMDg5eFJSZ216ZWkwN2xzQVFDUnI5MGFIcGlmYTZsZ3gyWVNucWtZZ3ZDUWdNSU9yNmdDQm9DeQpzOVBVL1FTaWxMYTV6cjZ4TE5iRFd6c0tmZ1YzSjhGWktjU3dQL3VkNHh6TWQ5amx1dURjQzR1TgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMXRvdUFUbjZIRFl5bkhpTHRQUDYrbHRENEpONXJ6T1pvUTZIbTZQRTQvY3V5Y3RnCnFvQll1NHR4RnhldzdSaFZVajdSOUZMUjBUa3lXQmZJbkdaRE9wZ3JnVjQzNlhVWnhRMHBObFZRUXNDYnlCQnUKNVRMYVBhZTVlNDBFeklGQWExZ1ZlT0dzL0hlcUl4bWp4bC96ZldoNU9uQk9kQXgrY1Z2OTZibmNaYnBTN1pQUgppaW5pTlBYeVFPUTA3dm9jalhXMEZtc2MyY1BQTnphcmVleTFLVld1bVBPSStqUWhKa3piUW1vRWdReE8yZzd0CllySGxHZ2tmRHBQcFBsSE9lbnhBOUNUQzcwTmgyYzlQcHBQb0VUZkFkQkZzOGNIcUlsWmQrK1l0UEwrVDQrTjEKeFhvVHNFQXFPUVAwOEdYSnlGS01HV2ZsUFU1cXdYM2t4ck9YUXdJREFRQUJBb0lCQVFEQ3F1VE1ENi9pSitrcgpoTDF3c3k5UDc2bE1yZEt2UDkyTzVBOVNvY3dma1RNL2U1cVdZYndFRVkvaUVJRXFFY1ljd3ZhUW5RbW12R0ExCkdUZVhIY0VFTWlRWkR6a3h1ZndqWW8xWXdXdjdUM0RXa0swcDFpMlBkNHpEdVQ0RDNZaDB1bGFhTkQvOGNLQWoKTlhRQ3BhV0VsMGhmL3FuVzFBc3N3dUVKQ0hIOWFIQUVVci9GNzEzaHFpMEJxVnlZYndIbUxrME56L3hUV2o2NAo5ckRyQnBOd3prYVIrOFgzK3o0c3hRWmthMGNMMTdpVjYyc1JTelNKQkEvNVdpVnJTd1NsTXFOeWp5N2loQ29zCmMyZWhoSlFmaG82RjBvalYwa2hRUGFzK0N4cURhNmNmRjVHbG9WL0d6c1o2SEhlUVdCY1ZVWHdyN0Y3VXRZaDcKcFcvRjNQRGhBb0dCQU90ekYxNHRTZXExaTA4clRkVEpJbTJxb1UzZGc4bzh3Z200NWR4ejFhYU5EUWt6WVNrcwpoSm92OHJQTVdHRHExQm9DdU1paW1RTHRoNGpMdVRGMW1RaGxsdVg0RSthajkrTVFvOGtWcnh2RWxlQytnZmVVCnl2a0EzZFJtMThROHNHdFQvd09uU3dpd0w0QTNaVXhrSjRRRFhpOTJvdWtud1RSd1QveUJhRklGQW9HQkFPbWEKM0Mwc1dmNERCM05JUW9WMVBWVGhSdHRVNTUrM3kxcmZNUE1HRHNsQkdrL1RuazdSZmRYZjcvSlhQc0QrT29oWgoySG5aeUVHQXBDMEc0b1NUN3ZDczdnSnh3QzdOci9wazlBeHZFMTZOZGlIT29UNWlqa1lOQW9oMmExY2ZxT0tzCmp4a0dtTldLVnpVUXFXM2dsdUVObzZIWnd0RTFjL3BSTURRUW01Nm5Bb0dCQUpHeDlHSFlrSWJtdEQvWFFpQk0KSGp2U2ZHSmNrckxRaWhuT0NwOHlKcUViWTFld0xZMTIrTThZb0l6V0JGSmt2YjhpdEFtalpCL0ZzRHJjSmNzUApSQlZJRitwU2FxNHNCTGJEa3paWmJyUTJIN0NrOG5PcjVUWFViWENEK3p4NWVZblF2bHNhYUhvRjNEN3hDSVFPCjdjem84SjFhUWxFWXdwdWFiRVNLSjIycEFvR0FDc29uVDBMVUtVSlVqc09RcHY5aVJOQmU2SFNFZWtFUCtIT0UKbkVUMFcrRlE2TXo2YStPTEwxeTNoWGI0SkF2YUFrQThHbXl2cmk3VjVtcUIvZU9qVHFSK0hjakpPcUF2ZDU1QQpFMjd4OHhVUGxzSW5lbTBzNnhsZ3U1TFVwR0tHOTJsRzlyM3lRekt2a25qaGlueXNHMXI0NnRuWEFMaTZVWjU4ClhudEI1Tk1DZ1lFQXBYNHVTV2c2VE5KUTNINXNoK3QxWlFuS2dKelJ1eFJkZXNHRTk4VlBoL2FEZTFPWEpLQlIKdHl2aVFoaWd0bmF6TDZCR3BWWEpmV0lsQS9EdE9XRE1uc0JtMm15TUJWaEkydmwzVWRWTVRpcUpQNXVhS2hVRQpGTmRsc1VXNUczb1ZrRDNSbmU5MTNNWjk2M2VKUktoZWNSWVF1YjRtdlpPcXovYWJTNFZtRThBPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "{{ cilium.network_mode }}"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "probe"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "{{ kubernetes.podSubnet }}"
  cluster-pool-ipv4-mask-size: "26"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "{{cilium.registry}}/cilium:{{cilium.version}}"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            add:
              # Use to set socket permission
              - CHOWN
              # Used to terminate envoy child process
              - KILL
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used since cilium creates raw sockets, etc...
              - NET_RAW
              # Used since cilium monitor uses mmap
              - IPC_LOCK
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "{{cilium.registry}}/cilium:{{cilium.version}}"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Only used for 'mount' cgroup
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      - name: apply-sysctl-overwrites
        image: "{{cilium.registry}}/cilium:{{cilium.version}}"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            drop:
              - ALL
            add:
              # Required in order to access host's /etc/sysctl.d dir
              - SYS_ADMIN
              # Used for nsenter
              - SYS_CHROOT
              - SYS_PTRACE
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "{{cilium.registry}}/cilium:{{cilium.version}}"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "{{cilium.registry}}/cilium:{{cilium.version}}"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        securityContext:
          seLinuxOptions:
            level: 's0'
            # Running with spc_t since we have removed the privileged mode.
            # Users can change it to a different type as long as they have the
            # type available on the system.
            type: 'spc_t'
          capabilities:
            # Most of the capabilities here are the same ones used in the
            # cilium-agent's container because this container can be used to
            # uninstall all Cilium resources, and therefore it is likely that
            # will need the same capabilities.
            add:
              # Used since cilium modifies routing tables, etc...
              - NET_ADMIN
              # Used in iptables. Consider removing once we are iptables-free
              - SYS_MODULE
              # We need it for now but might not need it for >= 5.11 specially
              # for the 'SYS_RESOURCE'.
              # In >= 5.8 there's already BPF and PERMON capabilities
              - SYS_ADMIN
              # Could be an alternative for the SYS_ADMIN for the RLIMIT_NPROC
              - SYS_RESOURCE
              # Both PERFMON and BPF requires kernel 5.8, container runtime
              # cri-o >= v1.22.0 or containerd >= v1.5.0.
              # If available, SYS_ADMIN can be removed.
              #- PERFMON
              #- BPF
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: {{cilium.registry}}/operator-generic:{{cilium.version}}
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
